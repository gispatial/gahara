"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _overrides = require("../helpers/overrides.js");

var _styledComponents = require("./styled-components.js");

var _constants = require("./constants.js");

var _utils = require("./utils.js");

var _focusVisible = require("../utils/focusVisible.js");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var Tag = React.forwardRef(function (props, ref) {
  var children = props.children,
      _props$closeable = props.closeable,
      closeable = _props$closeable === void 0 ? true : _props$closeable,
      color = props.color,
      _props$disabled = props.disabled,
      disabled = _props$disabled === void 0 ? false : _props$disabled,
      _props$isFocused = props.isFocused,
      isFocused = _props$isFocused === void 0 ? false : _props$isFocused,
      _props$isHovered = props.isHovered,
      isHovered = _props$isHovered === void 0 ? false : _props$isHovered,
      _props$kind = props.kind,
      kind = _props$kind === void 0 ? _constants.KIND.primary : _props$kind,
      _props$onActionClick = props.onActionClick,
      onActionClick = _props$onActionClick === void 0 ? function (event) {} : _props$onActionClick,
      _props$onActionKeyDow = props.onActionKeyDown,
      onActionKeyDown = _props$onActionKeyDow === void 0 ? function (event) {} : _props$onActionKeyDow,
      _props$onClick = props.onClick,
      onClick = _props$onClick === void 0 ? null : _props$onClick,
      _props$onKeyDown = props.onKeyDown,
      onKeyDown = _props$onKeyDown === void 0 ? null : _props$onKeyDown,
      _props$overrides = props.overrides,
      overrides = _props$overrides === void 0 ? {} : _props$overrides,
      title = props.title,
      _props$variant = props.variant,
      variant = _props$variant === void 0 ? _constants.VARIANT.light : _props$variant;

  var _React$useState = React.useState(false),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      focusVisible = _React$useState2[0],
      setFocusVisible = _React$useState2[1];

  function handleFocus(event) {
    if ((0, _focusVisible.isFocusVisible)(event)) {
      setFocusVisible(true);
    }
  }

  function handleBlur(event) {
    if (focusVisible !== false) {
      setFocusVisible(false);
    }
  }

  function handleKeyDown(event) {
    if (event.currentTarget !== event.target) {
      return;
    }

    var key = event.key;

    if (onClick && key === 'Enter') {
      onClick(event);
    }

    if (closeable && (key === 'Backspace' || key === 'Delete')) {
      onActionClick(event);
      onActionKeyDown(event);
    }

    if (onKeyDown) {
      onKeyDown(event);
    }
  }

  var _getOverrides = (0, _overrides.getOverrides)(overrides.Root, _styledComponents.Root),
      _getOverrides2 = _slicedToArray(_getOverrides, 2),
      Root = _getOverrides2[0],
      rootProps = _getOverrides2[1];

  var _getOverrides3 = (0, _overrides.getOverrides)(overrides.Action, _styledComponents.Action),
      _getOverrides4 = _slicedToArray(_getOverrides3, 2),
      Action = _getOverrides4[0],
      actionProps = _getOverrides4[1];

  var _getOverrides5 = (0, _overrides.getOverrides)(overrides.ActionIcon, _styledComponents.ActionIcon),
      _getOverrides6 = _slicedToArray(_getOverrides5, 2),
      ActionIcon = _getOverrides6[0],
      actionIconProps = _getOverrides6[1];

  var _getOverrides7 = (0, _overrides.getOverrides)(overrides.Text, _styledComponents.Text),
      _getOverrides8 = _slicedToArray(_getOverrides7, 2),
      Text = _getOverrides8[0],
      textProps = _getOverrides8[1];

  var clickable = typeof onClick === 'function';
  var rootHandlers = disabled ? {} : {
    onClick: onClick,
    onKeyDown: handleKeyDown
  };
  var actionHandlers = disabled ? {} : {
    onClick: function onClick(event) {
      // we don't want onClick to be called when the close icon is clicked
      event.stopPropagation();
      onActionClick(event);
    }
  };
  var sharedProps = {
    $clickable: clickable,
    $closeable: closeable,
    $color: color,
    $disabled: disabled,
    $isFocused: isFocused,
    $isHovered: isHovered,
    $kind: kind,
    $variant: variant,
    $isFocusVisible: focusVisible
  };
  var titleText = title || (0, _utils.getTextFromChildren)(children);
  var isButton = (clickable || closeable) && !disabled;
  return React.createElement(Root // eslint-disable-next-line flowtype/no-weak-types
  , _extends({
    ref: ref,
    "data-baseweb": "tag",
    "aria-label": isButton && closeable ? "".concat(typeof children === 'string' ? "".concat(children, ", ") : '', "close by backspace") : null,
    "aria-disabled": disabled ? true : null,
    role: isButton ? 'button' : null,
    tabIndex: isButton ? 0 : null
  }, rootHandlers, sharedProps, rootProps, {
    onFocus: (0, _focusVisible.forkFocus)(rootProps, handleFocus),
    onBlur: (0, _focusVisible.forkBlur)(rootProps, handleBlur)
  }), React.createElement(Text, _extends({
    title: titleText
  }, textProps), children), closeable ? React.createElement(Action, _extends({
    "aria-hidden": true,
    role: "presentation"
  }, actionHandlers, sharedProps, actionProps), React.createElement(ActionIcon, _extends({
    width: '10',
    height: '10',
    viewBox: '0 0 8 8',
    fill: 'none',
    xmlns: 'http://www.w3.org/2000/svg'
  }, actionIconProps), React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M0.861278 0.862254C1.12163 0.601905 1.54374 0.601905 1.80409 0.862254L3.99935 3.05752L6.19461 0.862254C6.45496 0.601905 6.87707 0.601905 7.13742 0.862254C7.39777 1.1226 7.39777 1.54471 7.13742 1.80506L4.94216 4.00033L7.13742 6.19559C7.39777 6.45594 7.39777 6.87805 7.13742 7.1384C6.87707 7.39875 6.45496 7.39875 6.19461 7.1384L3.99935 4.94313L1.80409 7.1384C1.54374 7.39875 1.12163 7.39875 0.861278 7.1384C0.600928 6.87805 0.600928 6.45594 0.861278 6.19559L3.05654 4.00033L0.861278 1.80506C0.600928 1.54471 0.600928 1.1226 0.861278 0.862254Z",
    fill: "currentColor"
  }))) : null);
});
Tag.displayName = 'Tag';
var _default = Tag;
exports.default = _default;